{"mappings":"YACA,MAAMA,EAAQC,GACL,IAAIC,SAAQC,GACjBA,EAAQF,KAING,EAASC,GAAQC,QAAQC,IAAI,kBAAkBF,OAGrDL,EAAM,KAAMQ,KAAKJ,GACjBJ,EAAM,KAAMQ,KAAKJ,GACjBJ,EAAM,MAAMQ,KAAKJ,GAGjB,MAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAInBC,EAAkB,CAACC,EAAUC,EAAUC,KAE3C,MAAMC,EAAeH,EAASI,KAAIC,GAChCA,EAAKR,OAASI,EAAW,IAAKI,EAAMP,QAASO,EAAKP,QAAWO,IAG/D,OAAO,IAAIhB,SAAQC,IAAWA,EAAQa,EAAa,G,EAG/CG,EAAUH,GAAgBV,QAAQc,MAAMJ,GAW9CJ,EAAgBH,EAAO,SAASD,KAAKW,GACrCP,EAAgBH,EAAO,OAAOD,KAAKW,GAOnC,MAIME,EAAmBC,GAEhB,IAAIpB,SAAQ,CAACC,EAASoB,KAC3B,MAAMC,GAPyBC,EAOS,IAPJC,EAOS,IANxCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADpB,IAACA,EAAKC,EASpCI,YAAW,KACQH,KAAKE,SAAW,GAGjC1B,EAAQ,CAAC4B,GAAGT,EAAYS,GAAI1B,KAAKmB,IAEjCD,EAAOD,EAAYS,GAAG,GAEvBP,EAAM,IAKLQ,EAAa,EAACD,GAACA,EAAE1B,KAAEA,MACvBC,QAAQC,IAAI,eAAewB,kBAAmB1B,MAAS,EAGnD4B,EAAWF,IACfzB,QAAQ4B,KAAK,gCAAgCH,6BAA8B,EAa7EV,EAAgB,CAAEU,GAAI,GAAII,OAAQ,MAC/B3B,KAAKwB,GACLI,MAAMH,GAETZ,EAAgB,CAAEU,GAAI,GAAII,OAAQ,MAC/B3B,KAAKwB,GACLI,MAAMH,GAETZ,EAAgB,CAAEU,GAAI,GAAII,OAAQ,KAC/B3B,KAAKwB,GACLI,MAAMH,GAETZ,EAAgB,CAAEU,GAAI,GAAII,OAAQ,MAC/B3B,KAAKwB,GACLI,MAAMH,E","sources":["src/index.js"],"sourcesContent":["///////////////////////// Задание 1\nconst delay = ms => {\n  return new Promise(resolve =>  \n    resolve(ms)\n   );\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n\n// /////////////////////////////Задание 2\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\n//переключить состояние пользователя\nconst toggleUserState = (allUsers, userName, callback) => {  \n  //обновленные пользователи\n  const updatedUsers = allUsers.map(user =>\n    user.name === userName ? { ...user, active: !user.active } : user,\n  );\n\n  return new Promise(resolve=>{ resolve(updatedUsers)}) //////////вместо callback функции\n};\n// //регистратор\nconst logger1 = updatedUsers => console.table(updatedUsers);\n\n// /*\n//  * Сейчас работает так\n//  */\n// // toggleUserState(users, 'Mango', logger);\n// // toggleUserState(users, 'Lux', logger);\n\n// /*\n//  * Должно работать так\n//  */\ntoggleUserState(users, 'Mango').then(logger1);\ntoggleUserState(users, 'Lux').then(logger1);\n\n\n\n /////////////////////////////Задание 3\n\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n\n  return new Promise((resolve, reject) => {\n    const delay = randomIntegerFromInterval(200, 500);\n\n    setTimeout(() => {\n    const canProcess = Math.random() > 0.3;\n\n    if (canProcess) {\n      resolve({id:transaction.id, time:delay});\n    } else {\n      reject(transaction.id);\n    }\n  }, delay);\n  })\n  \n};\n\nconst logSuccess = ({id, time}) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Работает так\n */\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);"],"names":["$b8f9b7833fa37166$var$delay","ms","Promise","resolve","$b8f9b7833fa37166$var$logger","time","console","log","then","$b8f9b7833fa37166$var$users","name","active","$b8f9b7833fa37166$var$toggleUserState","allUsers","userName","callback","updatedUsers","map","user","$b8f9b7833fa37166$var$logger1","table","$b8f9b7833fa37166$var$makeTransaction","transaction","reject","delay","min","max","Math","floor","random","setTimeout","id","$b8f9b7833fa37166$var$logSuccess","$b8f9b7833fa37166$var$logError","warn","amount","catch"],"version":3,"file":"index.1abf07f3.js.map"}